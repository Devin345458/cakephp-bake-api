{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
    /**
     * Delete method
     *
     * @OA\Delete(path="/1.0/{{ currentModelName }}",
     *   operationId="delete",
     *   summary="Delete a {{ currentModelName }}",
     *   tags={"{{ currentModelName }}"},
     *   @OA\Parameter(
     *      name="id",
     *      in="path",
     *      description="ID of {{ singularHumanName }} that you want to delete",
     *      required=true,
     *      @OA\Schema(
     *          type="integer",
     *          format="int64"
     *      )
     *   ),
     *   @OA\Response(
     *    response="200",
     *    description="Successful operation",
     *    @OA\JsonContent(
     *      @OA\Schema(
     *          name="success"
     *          type="string"
     *      )
     *     )
     *   )
     * )
     * @param string|null $id {{ singularHumanName }} id.
     * @return null Returns Success true.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        ${{ singularName }} = $this->{{ currentModelName }}->get($id);
        if (!$this->{{ currentModelName }}->delete(${{ singularName }})) {
            throw new ValidationException(${{ singularName }});
        }
        return $this->set([
            'success' => true,
            '_serialize' => ['success']
        ]);
    }
