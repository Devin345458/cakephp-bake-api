{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set compact = ["'#{singularName}'"] %}
    /**
     * Add method
     *
     * @OA\Post(path="/v1/{{ currentModelName }}",
     *   operationId="add",
     *   summary="Add a {{ currentModelName }}",
     *   tags={"{{ currentModelName }}"},
     *   @OA\RequestBody(
     *       required=true,
     *       description="The {{ singularHumanName }} you want to add",
     *       @OA\JsonContent(ref="#/components/schemas/{{ singularName | capitalize }}")
     *   ),
     *   @OA\Response(
     *    response="200",
     *    description="Successful operation",
     *    @OA\JsonContent(ref="#/components/schemas/{{ singularName | capitalize}}")
     *   ),
     *  )
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $this->getRequest()->allowMethod(['post']);
        ${{ singularName }} = $this->{{ currentModelName }}->newEntity();
        ${{ singularName }} = $this->{{ currentModelName }}->patchEntity(${{ singularName }}, $this->getRequest()->getData());
        if (!$this->{{ currentModelName }}->save(${{ singularName }})) {
            throw new ValidationException(${{ singularName }});
        }
        $this->set([
            '{{ singularName }}' => ${{ singularName }},
            '_serialize' => ['{{ singularName }}']
        ]);
    }
